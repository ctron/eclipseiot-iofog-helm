---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: applications.iofog.org
spec:
  group: iofog.org
  names:
    kind: Application
    listKind: ApplicationList
    plural: applications
    singular: application
  scope: Namespaced
  versions:
  - name: v3
    schema:
      openAPIV3Schema:
        description: Application is the Schema for the applications API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ApplicationSpec defines the desired state of Application
            properties:
              microservices:
                description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                  Important: Run "operator-sdk generate k8s" to regenerate code after
                  modifying this file Add custom validation using kubebuilder tags:
                  https://book-v1.book.kubebuilder.io/beyond_basics/generating_crd.html'
                items:
                  description: Microservice contains information for configuring a
                    microservice
                  properties:
                    agent:
                      description: MicroserviceAgent contains information about required
                        agent configuration for a microservice
                      properties:
                        config:
                          properties:
                            abstractedHardwareEnabled:
                              type: boolean
                            bluetoothEnabled:
                              type: boolean
                            changeFrequency:
                              format: int64
                              type: integer
                            cpuLimit:
                              format: int64
                              type: integer
                            deviceScanFrequency:
                              format: int64
                              type: integer
                            diskDirectory:
                              type: string
                            diskLimit:
                              format: int64
                              type: integer
                            dockerUrl:
                              type: string
                            logDirectory:
                              type: string
                            logFileCount:
                              format: int64
                              type: integer
                            logLimit:
                              format: int64
                              type: integer
                            memoryLimit:
                              format: int64
                              type: integer
                            networkRouter:
                              type: string
                            routerMode:
                              type: string
                            routerPort:
                              type: integer
                            statusFrequency:
                              format: int64
                              type: integer
                            upstreamRouters:
                              items:
                                type: string
                              type: array
                            watchdogEnabled:
                              type: boolean
                          type: object
                        name:
                          type: string
                      required:
                      - config
                      - name
                      type: object
                    application:
                      type: string
                    # TODO: Support for maps?
                    #config: {}
                    container:
                      description: MicroserviceContainer contains information for
                        configuring a microservice container
                      properties:
                        commands:
                          items:
                            type: string
                          type: array
                        env:
                          items:
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            required:
                            - key
                            - value
                            type: object
                          type: array
                        extraHosts:
                          items:
                            properties:
                              address:
                                type: string
                              name:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                        ports:
                          items:
                            properties:
                              external:
                                format: int32
                                type: integer
                              host:
                                type: string
                              internal:
                                format: int32
                                type: integer
                              protocol:
                                type: string
                              publicLink:
                                type: string
                              publicPort:
                                format: int32
                                type: integer
                            required:
                            - external
                            - host
                            - internal
                            - protocol
                            - publicLink
                            - publicPort
                            type: object
                          type: array
                        rootHostAccess:
                          type: boolean
                        volumes:
                          items:
                            properties:
                              accessMode:
                                type: string
                              containerDestination:
                                type: string
                              hostDestination:
                                type: string
                              type:
                                type: string
                            required:
                            - accessMode
                            - containerDestination
                            - hostDestination
                            type: object
                          type: array
                      required:
                      - ports
                      - rootHostAccess
                      type: object
                    created:
                      type: string
                    flow:
                      type: string
                    images:
                      description: MicroserviceImages contains information about the
                        images for a microservice
                      properties:
                        arm:
                          type: string
                        catalogId:
                          type: integer
                        registry:
                          type: string
                        x86:
                          type: string
                      required:
                      - arm
                      - catalogId
                      - registry
                      - x86
                      type: object
                    name:
                      type: string
                    rebuild:
                      type: boolean
                    uuid:
                      type: string
                  required:
                  - agent
                  - config
                  - name
                  - uuid
                  type: object
                type: array
              replicas:
                format: int32
                type: integer
              routes:
                items:
                  description: Route contains information about a route from one microservice
                    to another
                  properties:
                    from:
                      type: string
                    name:
                      type: string
                    to:
                      type: string
                  required:
                  - from
                  - name
                  - to
                  type: object
                type: array
            required:
            - microservices
            - replicas
            - routes
            type: object
          status:
            description: ApplicationStatus defines the observed state of Application
            properties:
              labelSelector:
                type: string
              podNames:
                items:
                  type: string
                type: array
              replicas:
                description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                  of cluster Important: Run "operator-sdk generate k8s" to regenerate
                  code after modifying this file Add custom validation using kubebuilder
                  tags: https://book-v1.book.kubebuilder.io/beyond_basics/generating_crd.html'
                format: int32
                type: integer
            required:
            - labelSelector
            - podNames
            - replicas
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: controlplanes.iofog.org
spec:
  group: iofog.org
  names:
    kind: ControlPlane
    listKind: ControlPlaneList
    plural: controlplanes
    singular: controlplane
  scope: Namespaced
  versions:
  - name: v3
    schema:
      openAPIV3Schema:
        description: ControlPlane is the Schema for the controlplanes API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ControlPlaneSpec defines the desired state of ControlPlane
            properties:
              controller:
                properties:
                  ecn:
                    type: string
                  ecnViewerPort:
                    type: integer
                  pidBaseDir:
                    type: string
                  portAllocatorHost:
                    type: string
                  portProvider:
                    type: string
                type: object
              database:
                properties:
                  databaseName:
                    type: string
                  host:
                    type: string
                  password:
                    type: string
                  port:
                    type: integer
                  provider:
                    type: string
                  user:
                    type: string
                type: object
              images:
                properties:
                  controller:
                    type: string
                  portManager:
                    type: string
                  proxy:
                    type: string
                  pullSecret:
                    type: string
                  router:
                    type: string
                type: object
              ingresses:
                properties:
                  httpProxy:
                    properties:
                      address:
                        type: string
                    type: object
                  router:
                    properties:
                      edgePort:
                        type: integer
                      interiorPort:
                        type: integer
                      messagePort:
                        type: integer
                    type: object
                  tcpProxy:
                    properties:
                      address:
                        type: string
                    type: object
                type: object
              replicas:
                properties:
                  controller:
                    format: int32
                    type: integer
                type: object
              services:
                properties:
                  controller:
                    properties:
                      address:
                        type: string
                      type:
                        type: string
                    type: object
                  proxy:
                    properties:
                      address:
                        type: string
                      type:
                        type: string
                    type: object
                  router:
                    properties:
                      address:
                        type: string
                      type:
                        type: string
                    type: object
                type: object
              user:
                description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                  Important: Run "operator-sdk generate k8s" to regenerate code after
                  modifying this file Add custom validation using kubebuilder tags:
                  https://book-v1.book.kubebuilder.io/beyond_basics/generating_crd.html'
                properties:
                  email:
                    type: string
                  name:
                    type: string
                  password:
                    type: string
                  surname:
                    type: string
                required:
                - email
                - name
                - password
                - surname
                type: object
            required:
            - user
            type: object
          status:
            description: ControlPlaneStatus defines the observed state of ControlPlane
            properties:
              conditions:
                description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                  of cluster Important: Run "make" to regenerate code after modifying
                  this file'
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{     // Represents the observations of a
                    foo's current state.     // Known .status.conditions.type are:
                    \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type
                    \    // +patchStrategy=merge     // +listType=map     // +listMapKey=type
                    \    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                    \n     // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            required:
            - conditions
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
